{"version":3,"sources":["helper.js","Flow.js","Story.js","App.js","reportWebVitals.js","index.js"],"names":["toBase36","x","xString","toString","length","fromBase36","parseInt","e","flowhashToJson","flowhash","retval","i","chunk","substr","flowid","pathselection","String","Flow","flow","setFlowhash","pathSelection","flowhashjson","parsePathSelection","handlePathSelectChange","target","value","className","text","paths","map","path","type","name","onChange","checked","next","style","JSON","stringify","Story","story","useParams","history","useHistory","React","useState","snippets","setSnippets","getNextKey","useEffect","newSnippets","Object","keys","k","snippet","display","start","console","log","validkeys","push","nextkey","getValidKeys","newflashjson","vk","forEach","key","jsonToFlowhash","children","to","window","location","href","App","dragon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd52841.chunk.js","sourcesContent":["// Base 36 allows for 1295 different options... should be plenty\n\n//x is a parseInt value\nexport function toBase36 (x) {\n    let xString = (x) ? x.toString(36) : '0';\n    if (xString.length % 2) {\n      xString = '0' + xString;\n    }\n    return xString\n}\n\nexport function fromBase36 (xString) {\n    try {\n      return parseInt(xString, 36);\n    }catch(e){\n      return 0;\n    }\n}\n\nexport function flowhashToJson(flowhash){\n    let retval = {}\n    for( let i = 0; i < flowhash.length; i+=4){\n        const chunk = flowhash.substr(i,4)\n        const flowid = fromBase36(chunk.substr(0,2))\n        const pathselection = fromBase36(chunk.substr(2,2))\n        retval[String(flowid)] = String(pathselection)\n    }\n    //console.log(\"flowhashtojson\")\n    //console.log(retval)\n    return retval\n}\n\nexport function jsonToFlowhash(flowhashjson){\n    let flowhash = \"\"\n    Object.keys(flowhashjson).forEach( (key) => {\n        flowhash += toBase36(key)\n        flowhash += toBase36(flowhashjson[key])\n    })\n    return flowhash\n}","import React from 'react';\nimport { flowhashToJson } from './helper'\n\nfunction Flow( {flow, flowid, flowhash, setFlowhash} ) {\n    \n    const parsePathSelection = () => {\n\n        const flowhashjson = flowhashToJson(flowhash)\n\n        return ( flowhashjson[flowid] ||  flowhashjson[flowid] === 0) ? flowhashjson[flowid] : -1\n    }\n    let pathSelection = parsePathSelection()\n\n    const handlePathSelectChange = (e) => {\n        setFlowhash(flowid, e.target.value)\n    }\n\n    return (\n        <div className=\"flow\">\n        <p>{flow[flowid].text}</p>\n        <ul>\n            { flow[flowid].paths.map((path, i) => {\n                // eslint-disable-next-line\n                return <li key={i}><label><input type=\"radio\" name={flowid} value={i} onChange={handlePathSelectChange} checked={ pathSelection === String(i) } /> {path.text}</label></li>\n            })}\n        </ul>\n        \n        { ( pathSelection !== -1 && flow[flowid].paths[pathSelection].next ) ? <Flow flow={flow} flowid={flow[flowid].paths[pathSelection].next} flowhash={flowhash} setFlowhash={setFlowhash}></Flow> : \"\"  }\n        \n        \n        <pre style={ { \"display\": \"none\" } }>\n            {JSON.stringify(flow, null, 2)}\n        </pre>\n        </div>\n    )\n}\n\nexport default Flow","import React, {useEffect} from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport Flow from './Flow'\nimport { flowhashToJson, jsonToFlowhash } from './helper'\nimport {\n    useParams,\n    useHistory,\n    Link\n  } from \"react-router-dom\";\n\nfunction Story( {story} ) {\n\n    //const [ flowhash, flowhashSetter] = React.useState(\"\")\n    let { flowhash = \"\" } = useParams()\n    let history = useHistory();\n    const [ snippets, setSnippets] = React.useState(\"\")\n\n    const getNextKey = (flow, flowid, flowhashjson) => {\n        return (flow[flowid].paths[flowhashjson[flowid]] && flow[flowid].paths[flowhashjson[flowid]].next) ? flow[flowid].paths[flowhashjson[flowid]].next : -1\n    }\n    const getValidKeys = (flow, flowid, flowhashjson) => {\n        const validkeys = []\n        validkeys.push(flowid)\n        let nextkey = getNextKey(flow,flowid, flowhashjson)\n        while(nextkey !== -1){\n            validkeys.push(nextkey)\n            nextkey = getNextKey(flow,nextkey, flowhashjson)\n        }\n        \n        //console.log(nextkey)\n\n\n        return validkeys\n        \n    }\n\n    const setFlowhash = (flowid, pathSelection) => {\n        const flowhashjson = flowhashToJson(flowhash)\n        let newSnippets = \"\"\n        flowhashjson[flowid] = pathSelection\n        console.log(typeof flowid)\n        //TODO get a list of valid indexes\n        const validkeys = getValidKeys(story.flow, story.start, flowhashjson)\n        console.log(flowhashjson)\n        console.log(validkeys)\n        const newflashjson = {}\n        for( let vk of validkeys){\n            console.log(vk)\n            console.log(typeof vk)\n            if (flowhashjson[vk]) {\n                newflashjson[vk] = flowhashjson[vk]\n                newSnippets += story.flow[vk].paths[newflashjson[vk]].snippet + \" \"\n            }\n             \n        }\n        console.log(newflashjson)\n        //flowhashSetter(jsonToFlowhash(newflashjson))\n        history.push('/'+jsonToFlowhash(newflashjson))\n        setSnippets(newSnippets)\n    }   \n\n    useEffect(() => {\n        let newSnippets = \"\"\n        const flowhashjson = flowhashToJson(flowhash)\n        for ( let k of Object.keys(flowhashjson)){\n            newSnippets += story.flow[k].paths[flowhashjson[k]].snippet + \" \"\n        }\n        setSnippets(newSnippets)\n    }, [flowhash, story, setSnippets]);\n\n    return (\n        <div>\n            <h1>Hello, it is time for a story <span style={ { display: \"none\" }}>{flowhash}</span></h1>\n            <div className=\"flowcontainer\">\n                <Flow flow={story.flow} flowid={story.start} flowhash={flowhash} setFlowhash={setFlowhash}></Flow>\n            </div>\n            <div className=\"markdowncontainer\">\n                <ReactMarkdown children={snippets} />\n            </div>\n            <pre style={ { \"display\": \"none\" } }>\n                {JSON.stringify(story, null, 2)}\n            </pre>\n            { ( flowhash !== \"\") ?\n            <div className=\"sharestory\">\n                Share your story: <Link to={ flowhash}>{window.location.href}</Link>\n            </div>\n            : \"\"}\n        </div>\n    )\n}\n\nexport default Story","//import logo from './logo.svg';\nimport './App.css';\nimport dragon from './stories/dragon.json'\n\nimport Story from './Story'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/:flowhash?\">\n            <Story story={dragon.story}></Story>\n          </Route>\n        </Switch>\n      </Router>\n\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}